name: Deploy-Nginx-Application

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  security-events: write   # for SARIF uploads

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  LOCATION: us-central1
  CLUSTER_NAME: gke-primary
  IMAGE_REPO: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-images
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/app-images/nginx-simple-app:${{ github.sha }}
  SVC_ACC: gcp-terraform-key@hot-cold-drp.iam.gserviceaccount.com

jobs:
  # ---------------------------
  # 1️⃣ BUILD
  # ---------------------------
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Set GCP project
        run: gcloud config set project $PROJECT_ID

      - name: Enable Required APIs
        run: |
          gcloud services enable artifactregistry.googleapis.com container.googleapis.com --project "$PROJECT_ID"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker Image
        run: |
          docker build -t "$IMAGE_REPO:$IMAGE_TAG" -t "$IMAGE_REPO:latest" -f Dockerfile .

      - name: Push Docker Image
        run: |
          docker push "$IMAGE_REPO:$IMAGE_TAG"
          docker push "$IMAGE_REPO:latest"

  # ---------------------------
  # 2️⃣ TRIVY SCAN
  # ---------------------------
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Pull Image for Scanning
        run: docker pull ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}

      - name: Trivy FS (artifact)
        uses: aquasecurity/trivy-action@0.28.0
        continue-on-error: true
        with:
          scan-type: fs
          scan-ref: .
          format: table
          output: trivy-fs.txt
          exit-code: '0'
          scanners: vuln,secret,misconfig,license

      - name: Trivy Image (artifact)
        uses: aquasecurity/trivy-action@0.28.0
        continue-on-error: true
        with:
          image-ref: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
          format: table
          output: trivy-image.txt
          exit-code: '0'
          ignore-unfixed: true
          scanners: vuln,secret,misconfig,license

      - name: Combine Trivy outputs -> trivy.output
        shell: bash
        run: |
          {
            echo "===== TRIVY FS SCAN (repo) ====="
            cat trivy-fs.txt 2>/dev/null || true
            echo
            echo "===== TRIVY IMAGE SCAN (${IMAGE_REPO}:${IMAGE_TAG}) ====="
            cat trivy-image.txt 2>/dev/null || true
          } > trivy.output

      - name: Upload Trivy artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy.output
          path: trivy.output
          retention-days: 14

  # ---------------------------
  # ⏸️ MANUAL APPROVAL GATE
  # ---------------------------
  approval:
    name: Await Manual Approval
    runs-on: ubuntu-latest
    needs: trivy-scan
    environment:
      name: prod-approval
    steps:
      - run: echo "Pending manual approval in environment 'prod-approval'."

  # ---------------------------
  # 3️⃣ DEPLOY
  # ---------------------------
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: approval

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Set GCP project
        run: gcloud config set project $PROJECT_ID

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials "$CLUSTER_NAME" --region "$LOCATION" --project "$PROJECT_ID"

      - name: Deploy to GKE
        shell: bash
        run: |
          set -e
          echo "Using image: $IMAGE_NAME"
          sed -e "s|image: .*|image: $IMAGE_NAME|g" k8s-app-deployment.yaml | kubectl apply -f -
          kubectl rollout status deployment/nginx-simple-app --timeout=5m
