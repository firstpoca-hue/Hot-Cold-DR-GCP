name: Deploy-Nginx-Application

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  security-events: write   # for SARIF uploads

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  LOCATION_A: us-central1
  CLUSTER_A: app-cluster-hot
  LOCATION_B: asia-south1
  CLUSTER_B: app-cluster-cold
  CONFIG_CLUSTER: app-cluster-hot
  IMAGE_REPO: us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gke-docker-repo/nginx-simple-app
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gke-docker-repo/nginx-simple-app:${{ github.sha }}

jobs:
  # ---------------------------
  # 1️⃣ BUILD
  # ---------------------------
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud and GKE auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Enable GKE auth plugin
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Set GCP project
        run: gcloud config set project $PROJECT_ID

      - name: Enable Required APIs
        run: |
          gcloud services enable artifactregistry.googleapis.com container.googleapis.com --project "$PROJECT_ID"

      - name: Configure Docker (Artifact Registry)
        run: gcloud auth configure-docker us-docker.pkg.dev --quiet

      - name: Build Docker Image
        run: |
          docker build -t "$IMAGE_REPO:$IMAGE_TAG" -t "$IMAGE_REPO:latest" -f DockerFile .

  # ---------------------------
  # 2️⃣ TRIVY SCAN
  # ---------------------------
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud and GKE auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Enable GKE auth plugin
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Set GCP project
        run: gcloud config set project $PROJECT_ID

      - name: Enable Required APIs
        run: |
          gcloud services enable artifactregistry.googleapis.com container.googleapis.com --project "$PROJECT_ID"

      - name: Configure Docker (Artifact Registry)
        run: gcloud auth configure-docker us-docker.pkg.dev --quiet

      # Build image again in this job's runner so Trivy can scan it locally
      - name: Build Docker Image (for scanning)
        run: |
          docker build -t "$IMAGE_REPO:$IMAGE_TAG" -t "$IMAGE_REPO:latest" -f DockerFile .

      # ---- Human-readable Trivy (artifact)
      - name: Trivy FS (artifact)
        uses: aquasecurity/trivy-action@0.28.0
        continue-on-error: true
        with:
          scan-type: fs
          scan-ref: .
          format: table
          output: trivy-fs.txt
          exit-code: '0'
          scanners: vuln,secret,misconfig,license

      - name: Tr
