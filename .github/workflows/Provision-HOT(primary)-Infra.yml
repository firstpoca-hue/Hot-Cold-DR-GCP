name: Provision-HOT(primary)-Infra

on:
  workflow_dispatch:
    inputs:
      force_apply:
        description: "Force apply even if plan artifact is missing or no changes detected"
        required: false
        type: boolean
        default: false

env:
  TF_IN_AUTOMATION: "true"
  WORKING_DIR: root
  TFVARS_PATH: ../env/dev/terraform.tfvars

jobs:

  # -------------------------------
  # 1️⃣ Terraform Init
  # -------------------------------
  init:
    name: Terraform Init
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Upload .terraform Folder
        uses: actions/upload-artifact@v4
        with:
          name: terraform-initialized
          path: .terraform

  # -------------------------------
  # 2️⃣ Terraform Plan
  # -------------------------------
  plan:
    name: Terraform Plan
    needs: init
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    outputs:
      has_changes: ${{ steps.plan.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Download Initialized Terraform
        uses: actions/download-artifact@v4
        with:
          name: terraform-initialized
          path: .terraform

      - name: Terraform Plan
        id: plan
        run: |
          set -o pipefail
          terraform validate
          terraform plan \
            -var-file="${{ env.TFVARS_PATH }}" \
            -input=false -no-color -out=tfplan.bin -detailed-exitcode | tee plan.txt
          code=$?
          if [ $code -eq 0 ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          elif [ $code -eq 2 ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "Plan failed"
            exit $code

      - name: Upload Plan Artifact
        if: ${{ steps.plan.outputs.has_changes == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            tfplan.bin
            plan.txt

  # -------------------------------
  # 3️⃣ Terraform Apply
  # -------------------------------
  apply:
    name: Terraform Apply
    needs: plan
    if: ${{ github.event.inputs.force_apply == 'true' || needs.plan.outputs.has_changes == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Download Initialized Terraform
        uses: actions/download-artifact@v4
        with:
          name: terraform-initialized
          path: .terraform

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan.bin
