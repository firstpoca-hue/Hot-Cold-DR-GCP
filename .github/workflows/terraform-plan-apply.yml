name: Terraform Plan & Apply (GCS backend)

on:
  workflow_dispatch:
    

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  TF_IN_AUTOMATION: "true"
  WORKING_DIR: root
  TFVARS_PATH: ../env/dev/terraform.tfvars

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # If your backend is declared in terraform { backend "gcs" {} } with fixed bucket/prefix,
      # this init is enough. If you want to keep bucket name secret, write backend.hcl and pass it.
      - name: Terraform Init (GCS backend)
        run: terraform init -reconfigure

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="${{ env.TFVARS_PATH }}" \
            -input=false -no-color \
            -out=tfplan.bin | tee plan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            ${{ env.WORKING_DIR }}/tfplan.bin
            ${{ env.WORKING_DIR }}/plan.txt

      # - name: Comment Plan on PR (if PR)
      #   if: ${{ github.event_name == 'pull_request' }}
      #   uses: thollander/actions-comment-pull-request@v2
      #   with:
      #     filePath: ${{ env.WORKING_DIR }}/plan.txt

  apply:
    needs: plan
    # if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: prod  # add Required reviewers for manual approval
    concurrency:
      group: tf-prod
      cancel-in-progress: false
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.WORKING_DIR }}

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (reconfigure)
        run: terraform init -reconfigure

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan.bin
