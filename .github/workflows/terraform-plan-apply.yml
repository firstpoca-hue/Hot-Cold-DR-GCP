name: Terraform Plan & Apply (GCS backend)

on:
   workflow_dispatch:
     
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  TF_IN_AUTOMATION: "true"
  WORKING_DIR: root
  TFVARS_PATH: ../env/dev/terraform.tfvars

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth to GCP (uses a SA JSON in repo secret GCP_SA_KEY)
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Ensure the state bucket exists (idempotent)
      - name: Ensure GCS backend bucket exists
        run: |
          BUCKET="${{ secrets.TF_BACKEND_BUCKET }}"
          LOCATION="ASIA-SOUTH1"
          if ! gsutil ls -b "gs://$BUCKET" >/dev/null 2>&1; then
            gcloud storage buckets create "gs://$BUCKET" --location="$LOCATION" --uniform-bucket-level-access
          fi

      # Provide backend config to init
      - name: Write backend.hcl
        run: |
          cat > backend.hcl <<EOF
          bucket = "${{ secrets.TF_BACKEND_BUCKET }}"
          prefix = "gke-modular/state"
          EOF

      - name: Terraform Init (GCS backend)
        run: terraform init -reconfigure -backend-config=backend.hcl

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="${{ env.TFVARS_PATH }}" \
            -input=false -no-color \
            -out=tfplan.bin | tee plan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            ${{ env.WORKING_DIR }}/tfplan.bin
            ${{ env.WORKING_DIR }}/plan.txt

      - name: Comment Plan on PR (if PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ${{ env.WORKING_DIR }}/plan.txt

  apply:
    name: Terraform Apply (requires approval)
    needs: plan
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    # Create an Environment named "prod" in repo settings with Required reviewers to enforce approval
    environment: prod
    concurrency:
      group: tf-prod
      cancel-in-progress: false
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.WORKING_DIR }}

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Write backend.hcl
        run: |
          cat > backend.hcl <<EOF
          bucket = "${{ secrets.TF_BACKEND_BUCKET }}"
          prefix = "gke-modular/state"
          EOF

      - name: Terraform Init (reconfigure)
        run: terraform init -reconfigure -backend-config=backend.hcl

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan.bin
