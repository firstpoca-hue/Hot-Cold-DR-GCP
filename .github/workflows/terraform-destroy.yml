name: Terraform Destroy (GCS backend)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'hot-cold-drp'
        required: true
        type: string

permissions:
  contents: read
  id-token: write

env:
  TF_IN_AUTOMATION: "true"
  WORKING_DIR: root
  TFVARS_PATH: ../env/dev/terraform.tfvars

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: prod  # manual approval gate
    concurrency:
      group: tf-prod
      cancel-in-progress: false
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (reconfigure)
        run: terraform init -reconfigure

      - name: Read project_id from tfvars
        id: read
        run: |
          PROJECT_ID=$(grep -E '^\s*project_id\s*=' "${{ env.TFVARS_PATH }}" | sed -E 's/.*=\s*"([^"]+)".*/\1/')
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT

      - name: Verify confirmation matches project_id
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "${{ steps.read.outputs.project_id }}" ]; then
            echo "Confirmation did not match project_id. Refusing to destroy."
            exit 1
          fi

      - name: Terraform Destroy
        run: terraform destroy -var-file="${{ env.TFVARS_PATH }}" -auto-approve
